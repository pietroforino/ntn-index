---
const { images } = Astro.props;
---

<style>
.lightbox-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.0);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.lightbox-content {
  text-align: center;
  position: relative;
  max-width: 100%;
  padding: 10px;
  max-height: calc(100% - 14px);
  aspect-ratio: 1 / 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

.lightbox-content img {
  max-width: 100%;
  max-height: 100%;
}

.lightbox-close {
  position: absolute;
  top: 0px;
  right: 0px;
  background: none;
  border: none;
  font-size: 1.5rem;
  line-height: 1;
  cursor: pointer;
  color: black;
}

.lightbox-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.5);
  border: none;
  font-size: 2rem;
  cursor: pointer;
  padding: 0px;
}

.lightbox-arrow.left {
  left: 5px;
}

.lightbox-arrow.right {
  right: 5px;
}
</style>

<div id="lightbox" class="lightbox-overlay" style="display: none;">
  <button id="lightbox-close" class="lightbox-close">&times;</button>
  <button id="lightbox-prev" class="lightbox-arrow left">&#10094;</button>
  <div class="lightbox-content">
    <img id="lightbox-image" src="" sizes="100vw" alt="Lightbox Image" />
  </div>
  <button id="lightbox-next" class="lightbox-arrow right">&#10095;</button>
</div>

<script is:inline>
document.addEventListener("DOMContentLoaded", () => {
  const lightbox = document.getElementById("lightbox");
  const closeButton = document.getElementById("lightbox-close");
  const prevButton = document.getElementById("lightbox-prev");
  const nextButton = document.getElementById("lightbox-next");
  const imageElement = document.getElementById("lightbox-image");

  let images = [];
  let currentIndex = 0;

  window.openLightbox = (imageList, r) => {
    images = imageList;
    currentIndex = 0;
    updateImage();
    lightbox.style.display = "flex";
    document.querySelectorAll('.row').forEach((row) => {
      row.classList.add('hided');
    });
    r.classList.remove('hided');
    r.classList.add('showed');
  };

  function updateImage() {
    if (images.length > 0) {
      imageElement.src = 'http://localhost:1337'+images[currentIndex];
      console.log(imageElement);
    }
  }

  prevButton.addEventListener("click", (event) => {
    event.stopPropagation(); // Prevent closing the lightbox
    currentIndex = (currentIndex - 1 + images.length) % images.length;
    updateImage();
  });

  nextButton.addEventListener("click", (event) => {
    event.stopPropagation(); // Prevent closing the lightbox
    currentIndex = (currentIndex + 1) % images.length;
    updateImage();
  });

  closeButton.addEventListener("click", () => {
    lightbox.style.display = "none";
    document.querySelectorAll('.row').forEach((row) => {
      row.classList.remove('hided');
    });
  });

  lightbox.addEventListener("click", (event) => {
    if (event.target === lightbox) {
      lightbox.style.display = "none";
      document.querySelectorAll('.row').forEach((row) => {
      row.classList.remove('hided');
    });
    }
  });
});
</script>
